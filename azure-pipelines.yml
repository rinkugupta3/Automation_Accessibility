trigger:
  branches:
    include:
      - main
      - stage
      - dev

pool:
  vmImage: 'ubuntu-latest'

variables:
  PipCache: $(Pipeline.Workspace)/.pip_cache
  HEADLESS: 'true'

stages:
  - stage: AxecoreLighthouseTests
    displayName: 'Run Headless Axecore Lighthouse Tests'
    jobs:
      - job: RunAxecoreLighthouse
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.11'
              addToPath: true

          - script: |
              mkdir -p "$(PipCache)" || echo "Cache directory already exists"
            displayName: 'Create Pip Cache Directory'

          - task: Cache@2
            inputs:
              key: 'python | "$(Agent.OS)" | requirements.txt'
              restoreKeys: |
                python | "$(Agent.OS)"
              path: $(PipCache)
            continueOnError: true

          - script: |
              python -m pip install --upgrade pip
              pip install -r requirements.txt
              pip install pytest-html
            displayName: 'Install Python Dependencies'

          - script: |
              pip install axe-selenium-python
            displayName: 'Install axe-selenium-python'

          - script: |
              npm install -g lighthouse
            displayName: 'Install Lighthouse'

          - script: |
              export HEADLESS=true
              lighthouse --version  # Check Lighthouse installation
              pytest tests/test_axecore_lighthouse.py --html=report_axecore_lighthouse.html --maxfail=3 --disable-warnings -v
            displayName: 'Run Headless Axecore Lighthouse Tests'

          # Publish Axecore Lighthouse Test Report
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.SourcesDirectory)/tests/report_axecore_lighthouse.html'
              ArtifactName: 'Axecore Lighthouse HTML Report'

          # Publish Accessibility HTML Report
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: 'tests/accessibility_report.html'
              ArtifactName: 'Accessibility HTML Report'

          # Publish pytest.log as build artifact
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: 'tests/pytest.log'  # Ensure this path matches the logs folder
              ArtifactName: 'PytestLog'

          # Publish accessibility JSON report
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: 'tests/accessibility_report.json'
              ArtifactName: 'Accessibility JSON Report'

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: 'tests'

  # Stage for running headless tests in the 'tests_login_home_webpage' folder
  - stage: LoginHomeWebpageTests
    displayName: 'Run Headless Login Home Webpage Tests'
    jobs:
      - job: RunLoginHomeWebpage
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.11'
              addToPath: true

          - script: |
              mkdir -p "$(PipCache)" || echo "Cache directory already exists"
            displayName: 'Create Pip Cache Directory'

          - task: Cache@2
            inputs:
              key: 'python | "$(Agent.OS)" | requirements.txt'
              restoreKeys: |
                python | "$(Agent.OS)"
              path: $(PipCache)
            continueOnError: true

          - script: |
              python -m pip install --upgrade pip
              pip install -r requirements.txt
              pip install pytest-html
            displayName: 'Install Python Dependencies'

          - script: |
              pip install axe-selenium-python
            displayName: 'Install axe-selenium-python'

          - script: |
              export HEADLESS=true
              pytest tests_login_home_webpage/test_login_home_webpage.py --html=report_login_home_webpage.html --maxfail=3 --disable-warnings -v
            displayName: 'Run Headless Login Home Webpage Tests'

          # Publish Accessibility HTML Report
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.SourcesDirectory)/tests_login_home_webpage/accessibility_report.html'
              ArtifactName: 'Accessibility HTML Report'

          # Publish pytest.log as build artifact
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.SourcesDirectory)/tests_login_home_webpage/pytest.log'
              ArtifactName: 'PytestLog'

          # Publish accessibility JSON report
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.SourcesDirectory)/tests_login_home_webpage/accessibility_report.json'
              ArtifactName: 'Accessibility JSON Report'

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: 'tests_login_home_webpage'

  # Stage for running headless tests in the 'tests_login_webpage' folder
  - stage: LoginWebpageTests
    displayName: 'Run Headless Login Webpage Tests'
    jobs:
      - job: RunLoginWebpage
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.11'
              addToPath: true

          - script: |
              mkdir -p "$(PipCache)" || echo "Cache directory already exists"
            displayName: 'Create Pip Cache Directory'

          - task: Cache@2
            inputs:
              key: 'python | "$(Agent.OS)" | requirements.txt'
              restoreKeys: |
                python | "$(Agent.OS)"
              path: $(PipCache)
            continueOnError: true

          - script: |
              python -m pip install --upgrade pip
              pip install -r requirements.txt
              pip install pytest-html
            displayName: 'Install Python Dependencies'

          - script: |
              pip install axe-selenium-python
            displayName: 'Install axe-selenium-python'

          - script: |
              export HEADLESS=true
              pytest tests_login_webpage/test_login_webpage.py --html=report_login_webpage.html --maxfail=3 --disable-warnings -v
            displayName: 'Run Headless Login Webpage Tests'

          # Publish Accessibility HTML Report
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.SourcesDirectory)/tests_login_webpage/accessibility_report.html'
              ArtifactName: 'Accessibility HTML Report'

          # Publish pytest.log as build artifact
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.SourcesDirectory)/tests_login_webpage/pytest.log'
              ArtifactName: 'PytestLog'

          # Publish accessibility JSON report
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.SourcesDirectory)/tests_login_webpage/accessibility_report.json'
              ArtifactName: 'Accessibility JSON Report'

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: 'tests_login_webpage'
